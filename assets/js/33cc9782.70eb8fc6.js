"use strict";(self.webpackChunkdocusaurus_documentation=self.webpackChunkdocusaurus_documentation||[]).push([[6542],{9754:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var i=t(5893),s=t(1151);const o={},r="Communication",c={id:"developers-guide/communication",title:"Communication",description:"WeDAA supports the definition of Inter-service communication among Components such as UI and Services nodes.",source:"@site/docs/developers-guide/communication.md",sourceDirName:"developers-guide",slug:"/developers-guide/communication",permalink:"/docs/developers-guide/communication",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Global Configurations",permalink:"/docs/developers-guide/global-configurations"},next:{title:"Project Structure",permalink:"/docs/developers-guide/project-structure"}},d={},a=[{value:"Communication options",id:"communication-options",level:3},{value:"RabbitMQ",id:"rabbitmq",level:3},{value:"REST API",id:"rest-api",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"communication",children:"Communication"}),"\n",(0,i.jsx)(n.p,{children:"WeDAA supports the definition of Inter-service communication among Components such as UI and Services nodes."}),"\n",(0,i.jsx)(n.p,{children:"These definitions will generate a reference API or message broker configurations based on the design in canvas."}),"\n",(0,i.jsx)(n.h3,{id:"communication-options",children:"Communication options"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Framework"}),(0,i.jsx)(n.th,{children:"Comment"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Asynchronous"}),(0,i.jsx)(n.td,{children:"RabbitMQ"}),(0,i.jsx)(n.td,{children:"Asynchronous communication using RabbitMQ message broker"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Synchronous"}),(0,i.jsx)(n.td,{children:"REST"}),(0,i.jsx)(n.td,{children:"Synchronous communication using HTTP REST API"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"rabbitmq",children:"RabbitMQ"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"RabbitMQ Guide",src:t(4322).Z+"",width:"1882",height:"406"})}),"\n",(0,i.jsx)(n.p,{children:"WeDAA provides dockerfile for starting RabbitMQ server quickly."}),"\n",(0,i.jsx)(n.p,{children:"RabbitMQ server can be started using below command"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"docker compose -f src/main/docker/rabbitmq.yml up --wait\n"})}),"\n",(0,i.jsxs)(n.p,{children:["RabbitMQ's management console can be accessed on ",(0,i.jsx)(n.a,{href:"http://localhost:15672/",children:"http://localhost:15672/"})]}),"\n",(0,i.jsx)(n.p,{children:"Default Credentials:"}),"\n",(0,i.jsxs)(n.p,{children:["username: ",(0,i.jsx)(n.strong,{children:"guest"}),"  ; password: ",(0,i.jsx)(n.strong,{children:"guest"})]}),"\n",(0,i.jsx)(n.p,{children:"Producer service has a cron, that publish events periodically every few seconds."}),"\n",(0,i.jsx)(n.p,{children:"Consumer service is configured to receive events generated by the Producer."}),"\n",(0,i.jsx)(n.h3,{id:"rest-api",children:"REST API"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"REST API Guide",src:t(8811).Z+"",width:"1864",height:"484"})}),"\n",(0,i.jsx)(n.p,{children:"WeDAA generates a sample REST API in both client and server."}),"\n",(0,i.jsx)(n.p,{children:"API in the client is configured to invoke the server API on HTTP."})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},4322:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/rabbitmq-guide-d97e26343ad3de42c928cc3123a07ee9.png"},8811:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/rest-api-guide-b97a3eee1d8ae1e0d263debf6098fbc6.png"},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>r});var i=t(7294);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);